mutation createRepositories($data: RepositoriesCreateInput!) {
  createRepositories(data: $data) {
    ...RepositoryFragment
  }
}

mutation deleteRepository($data: RepositoryUniqueWhereInput!) {
  deleteRepository(data: $data)
}

query listRepositories($data: RepositoriesInput!) {
  repositories(data: $data) {
    ...RepositoryFragment
    frequency(groupBy: createdAt) {
      count
      group
    }
  }
}

query countRepositories($data: CountRepositoriesInput!) {
  countRepositories(data: $data)
}

fragment RepositoryFull on Repository {
  ...RepositoryFragment
  frequency(groupBy: createdAt) {
    count
    group
  }
  harvests {
    startedAt
    finishedAt
    itemsAdded
    itemsIgnored
    logs
  }
  sources {
    ...SourceFragment
  }
}

query repositoryById($data: RepositoryWhereInput!) {
  repository(data: $data) {
    ...RepositoryFull
  }
}

mutation updateRepository($data: RepositoryUpdateInput!) {
  updateRepository(data: $data) {
    ...RepositoryFull
  }
}
