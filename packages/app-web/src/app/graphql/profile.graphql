query profile {
  profile {
    minimalFeatureState
    isLoggedIn
    user {
      id
      hasAcceptedTerms
      purgeScheduledFor
      secrets {
        ...BasicSecret
      }
      subscription {
        expiry
        startedAt
        plan {
          ...BasicPlan
        }
      }
    }
  }
}

mutation updateCurrentUser($data: UpdateCurrentUserInput!) {
  updateCurrentUser(data: $data)
}

mutation createUser($data: CreateUserInput!) {
  createUser(data: $data) {
    id
  }
}

mutation logout {
  logout
}

fragment BasicSecret on UserSecret {
  id
  validUntil
  type
  lastUsed
  value
  valueMasked
}

mutation createUserSecret {
  createUserSecret {
    ...BasicSecret
  }
}

mutation deleteUserSecrets($data: DeleteUserSecretsInput!) {
  deleteUserSecrets(data: $data)
}
