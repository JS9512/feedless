create table public.t_feed_generic
(
  id                uuid         not null
    primary key,
  createdat         timestamp(6) not null,
  feedspecification jsonb        not null,
  websiteurl        varchar(255) not null,
  nativefeed_id     uuid
);

alter table public.t_feed_generic
  owner to postgres;

create table public.t_plan
(
  id           uuid             not null
    primary key,
  createdat    timestamp(6)     not null,
  availability varchar(255)     not null,
  costs        double precision not null,
  name         varchar(255)     not null
    constraint uk_hslenih4o8iw4gbho72545mf3
      unique,
  is_primary   boolean          not null
);

alter table public.t_plan
  owner to postgres;

create table public.t_feature
(
  id           uuid         not null
    primary key,
  createdat    timestamp(6) not null,
  name         varchar(255) not null,
  plan_id      uuid
    constraint fkj9etkvylxqaj7ee5e840nphcc
      references public.t_plan,
  state        varchar(255) not null,
  valueboolean boolean,
  valueint     integer,
  valuetype    varchar(255) not null
);

alter table public.t_feature
  owner to postgres;

create table public.map_plan_to_feature
(
  plan_id    uuid not null
    constraint fksc26dpu29xdimt1d0ejr4n3oa
      references public.t_plan,
  feature_id uuid not null
    constraint fkavs1bn9cp7ur1t2xqguf12b1t
      references public.t_feature
);

alter table public.map_plan_to_feature
  owner to postgres;

create table public.t_stream
(
  id        uuid         not null
    primary key,
  createdat timestamp(6) not null
);

alter table public.t_stream
  owner to postgres;

create table public.t_user
(
  id                      uuid                      not null
    primary key,
  createdat               timestamp(6)              not null,
  approvedtermsat         timestamp(6),
  date_format             varchar(255),
  email                   varchar(255)              not null
    constraint uk_i6qjjoe560mee5ajdg7v1o6mi
      unique,
  hasapprovedterms        boolean                   not null,
  isroot                  boolean                   not null,
  locked                  boolean                   not null,
  name                    varchar(255)              not null,
  notifications_stream_id uuid                      not null
    constraint fk5t89sip0n4g578g4yxaugjc1h
      references public.t_stream,
  plan_id                 uuid
    constraint fkciy9noxqwbr96ybkp5fv2c2ty
      references public.t_plan,
  time_format             varchar(255),
  purgescheduledfor       timestamp(6),
  plugins                 jsonb default '{}'::jsonb not null
);

alter table public.t_user
  owner to postgres;

create table public.t_bucket
(
  id            uuid          not null
    primary key,
  createdat     timestamp(6)  not null,
  description   varchar(1024) not null,
  imageurl      varchar(200),
  lastupdatedat timestamp(6),
  ownerid       uuid          not null
    constraint fkhr17e39pk9333v21m3ha23ggl
      references public.t_user,
  streamid      uuid          not null
    constraint fk157cu4wjd97imxmg4ns0x3x85
      references public.t_stream,
  tags          text[],
  title         varchar(255)  not null,
  visibility    varchar(255)  not null,
  webhookurl    varchar(200),
  websiteurl    varchar(200)
);

alter table public.t_bucket
  owner to postgres;

create table public.t_feed_native
(
  id                       uuid                      not null
    primary key,
  createdat                timestamp(6)              not null,
  description              varchar(1024),
  domain                   varchar(255),
  failedattemptcount       integer                   not null,
  feedurl                  varchar(1000)             not null,
  harvestintervalminutes   integer,
  harvestsitewithprerender boolean                   not null,
  iconurl                  varchar(255),
  imageurl                 varchar(255),
  lang                     varchar(255),
  lastchangedat            timestamp(6),
  lastupdatedat            timestamp(6),
  lat                      bigint,
  lon                      bigint,
  nextharvestat            timestamp(6),
  ownerid                  uuid                      not null
    constraint fkpadc1pn1ghj7c1qfnsau0b1ml
      references public.t_user,
  retentionsize            integer,
  status                   varchar(255)              not null,
  streamid                 uuid                      not null
    constraint fknwf9rwa6eoqe5p08mo6uxkgwn
      references public.t_stream,
  title                    varchar(256)              not null,
  visibility               varchar(255)              not null,
  websiteurl               varchar(255),
  generic_feed_id          uuid
    constraint fkn9kfg8o3jfarh3kqa960w7t3q
      references public.t_feed_generic,
  plugins                  jsonb default '[]'::jsonb not null,
  constraint uniqueownerandfeed
    unique (ownerid, feedurl)
);

alter table public.t_feed_native
  owner to postgres;

alter table public.t_feed_generic
  add constraint fk2ft85wtvm6ivw0vxhteihm0rw
    foreign key (nativefeed_id) references public.t_feed_native;

create table public.t_importer
(
  id                        uuid                      not null
    primary key,
  createdat                 timestamp(6)              not null,
  is_auto_release           boolean,
  bucketid                  uuid
    constraint fkdunmc6oa4jocbgv4q4jyh4xny
      references public.t_bucket,
  segment_digest            boolean                   not null,
  feedid                    uuid                      not null
    constraint fkmfgv3wp5008are0gbk2il2blp
      references public.t_feed_native,
  filter                    varchar(255),
  lastupdatedat             timestamp(6),
  lookaheadmin              integer,
  ownerid                   uuid                      not null
    constraint fk4u7buardohn32sp7yocqn59ke
      references public.t_user,
  segment_size              integer,
  segmentsortasc            boolean                   not null,
  segmentsortfield          varchar(255),
  title                     varchar(255),
  triggerrefreshon          varchar(255)              not null,
  triggerscheduleexpression varchar(255),
  triggerscheduledlastat    timestamp(6),
  triggerschedulednextat    timestamp(6),
  plugins                   jsonb default '[]'::jsonb not null,
  constraint ukknq9ceicvfc210mced7ncsuie
    unique (bucketid, feedid)
);

alter table public.t_importer
  owner to postgres;

create table public.t_otp
(
  id         uuid         not null
    primary key,
  createdat  timestamp(6) not null,
  password   varchar(255) not null,
  userid     uuid         not null
    constraint fk36b6qk1g90ucc651dole1w4et
      references public.t_user,
  validuntil timestamp(6) not null
);

alter table public.t_otp
  owner to postgres;

create table public.t_user_plan_subscription
(
  id        uuid         not null
    primary key,
  createdat timestamp(6) not null,
  paiduntil timestamp(6),
  plan_id   uuid         not null
    constraint fk8ncewprxstppim67lx6e7ysn4
      references public.t_plan,
  recurring boolean      not null,
  startedat timestamp(6),
  user_id   uuid         not null
    constraint fk9fe7lce4xahbf06k9eiwgy02h
      references public.t_user
);

alter table public.t_user_plan_subscription
  owner to postgres;

create table public.t_user_secret
(
  id         uuid         not null
    primary key,
  createdat  timestamp(6) not null,
  lastusedat timestamp(6),
  owner_id   uuid         not null
    constraint fk4evcslbhw4nofy5xsl2yyqxjk
      references public.t_user,
  type       varchar(255) not null,
  validuntil timestamp(6) not null,
  value      varchar(400) not null
);

alter table public.t_user_secret
  owner to postgres;

create table public.t_web_document
(
  id                   uuid                      not null
    primary key,
  createdat            timestamp(6)              not null,
  aliasurl             varchar(1000),
  attachments          jsonb,
  contentraw           text,
  contentrawmime       varchar(255),
  contenttext          text,
  contenttitle         varchar(256),
  description          text,
  finalized            boolean                   not null,
  hasaudio             boolean                   not null,
  hasfulltext          boolean                   not null,
  hasvideo             boolean                   not null,
  imageurl             varchar(1000),
  pending_plugins      jsonb                     not null,
  pluginscooldownuntil timestamp(6),
  releasedat           timestamp(6)              not null,
  score                integer                   not null,
  startingat           timestamp(6),
  title                varchar(256),
  updatedat            timestamp(6)              not null,
  url                  varchar(1000)             not null,
  executed_plugins     jsonb default '[]'::jsonb not null
);

alter table public.t_web_document
  owner to postgres;

create table public.t_article
(
  id            uuid         not null
    primary key,
  createdat     timestamp(6) not null,
  importerid    uuid
    constraint fkdxiy9chl8ghd9848def9b8o4o
      references public.t_importer,
  ownerid       uuid         not null
    constraint fkq3lxplias2mkt5aqmxc1d9kiv
      references public.t_user,
  releasedat    timestamp(6),
  status        varchar(255) not null,
  streamid      uuid         not null
    constraint fkdh0dxm4bk8ahvk23dnfc40u8y
      references public.t_stream,
  type          varchar(255) not null,
  webdocumentid uuid         not null
    constraint fk5a2eyi09un1yg3xls70asf5va
      references public.t_web_document
);

alter table public.t_article
  owner to postgres;

create table public.t_hyperlink
(
  id        uuid             not null
    primary key,
  createdat timestamp(6)     not null,
  fromid    uuid             not null
    constraint fkgd7hbkkhrefq82vngp00so06d
      references public.t_web_document,
  hypertext varchar(256)     not null,
  relevance double precision not null,
  toid      uuid             not null
    constraint fkixc22j33g4ov6eskdww7884ci
      references public.t_web_document
);

alter table public.t_hyperlink
  owner to postgres;

create index idx_hyperlink_url
  on public.t_hyperlink (fromid);

create index idx_web_document_url
  on public.t_web_document (url);

create table public.flyway_schema_history
(
  installed_rank integer                 not null
    constraint flyway_schema_history_pk
      primary key,
  version        varchar(50),
  description    varchar(200)            not null,
  type           varchar(20)             not null,
  script         varchar(1000)           not null,
  checksum       integer,
  installed_by   varchar(100)            not null,
  installed_on   timestamp default now() not null,
  execution_time integer                 not null,
  success        boolean                 not null
);

alter table public.flyway_schema_history
  owner to postgres;

create index flyway_schema_history_s_idx
  on public.flyway_schema_history (success);

